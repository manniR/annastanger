{"version":3,"sources":["../framework/core/placeholder/_antialias.scss","../framework/core/placeholder/_word-wrap.scss","../framework/generators/_fontface-generator.scss","../framework/partials/_normalize.scss","../framework/generators/_resposive-fontsize-generator.scss","_setup.scss","../framework/methods/_vertical-sizes.scss","../framework/core/functions/_rem.scss","maps/_fontstacks.scss","style.css","../framework/generators/_typoset-generator.scss","application/utilities/_container.scss","application/atoms/img.scss","application/atoms/data-aspect-ratio.scss","application/organisms/grid.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["// ===================================================\n// Placeholder Class\n// ===================================================\n\n/// Activate Antialias on Webkit Browsers\n///\n/// @param {bool} $extend [true] - Set it on false the mixin will used as regular mixin\n///\n/// @group core - placeholder\n///\n/// @example scss - scss\n///   .box-1 {\n///     @include antialias();\n///   }\n///   @include break(4) {\n///     .box-2 {\n///       @include antialias(false);\n///     }\n///   }\n///\n/// @example css - css\n///   .box-1 {\n///     -webkit-font-smoothing: antialiased;\n///     -moz-osx-font-smoothing: grayscale;\n///   }\n///   @media screen and (min-width: 768px) {\n///     .box-2 {\n///       -webkit-font-smoothing: antialiased;\n///       -moz-osx-font-smoothing: grayscale;\n///     }\n///   }\n@mixin antialias($extend: true) {\n  @if $extend {\n    @extend %antialias;\n\n  } @else {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n}\n\n// Placeholder Class\n%antialias {\n  @include antialias(false);\n}\n","// ===================================================\n// Placeholder Class\n// ===================================================\n\n/// Compatible Mixin for Word-Wrap\n///\n/// @param {bool} $extend [true] - Set it on false the mixin will used as regular mixin\n///\n/// @group core - placeholder\n///\n/// @example scss - scss\n///   .box-1 {\n///     @include word-wrap();\n///   }\n///   .box-2 {\n///     @include word-wrap();\n///   }\n///   .box-3 {\n///     @include break(4) {\n///       @include word-wrap(false);\n///     }\n///   }\n///\n/// @example css - css\n///   .box-1, .box-2 {\n///     -ms-word-break: break-all;\n///     word-break: break-all;\n///     word-break: break-word; }\n///\n///   @media screen and (min-width: 768px) {\n///     .box-3 {\n///       -ms-word-break: break-all;\n///       word-break: break-all;\n///       word-break: break-word; } }\n@mixin word-wrap($extend: true) {\n  @if $extend {\n    @extend %word-wrap;\n\n  } @else {\n    hyphens: auto;\n    -ms-word-break: break-all;\n    word-break: break-all;\n    word-break: break-word;\n  }\n}\n\n// Placeholder Class\n%word-wrap {\n  @include word-wrap(false);\n}\n","// ===================================================\n// Fontface Generator\n// ===================================================\n\n/// Include all Font Faces from the Font Face Map\n/// Will be activated with Internal Functions\n///\n/// @group generators\n///\n/// @requires {mixin} fontface\n///\n/// @param  {map}    $map - Map\n@mixin fontface-generator($map: $kittn-fontface-map ) {\n  // Add Counter\n  $counter: 1;\n\n  // Check if fontface mixin exists\n  @if mixin_exists(fontface) {\n/*\n  FontFaces\n\n  Styleguide 1.7\n*/\n    // Run through each font face\n    @each $name, $entry in $map {\n\n      // Move the Counter Up to count the Loop\n      $counter: $counter + 1;\n/*\n  Font: #{$name}\n\n  markup:\n  <h2 style=\"font-family: #{$name}\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr</h2>\n  <p style=\"font-family: #{$name}\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.7.#{$counter}\n*/\n      @each $key, $style in $entry {\n\n        // Call the Mixin\n        @include fontface(\n          $fontname: $name,\n          $o: (\n            filename: map-get($style,filename),\n            weight: map-get($style,weight),\n            style: map-get($style,style),\n            short: map-get($style,short)\n          )\n        );\n      }\n    }\n  } @else {\n    @warn \"Fontface mixin dosen't exists\";\n  }\n}\n","// ===================================================\n// Normalize\n// ===================================================\n\n/*\n  Base Styles\n\n  Styleguide 1\n*/\nhtml {\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n  background: transparent;\n\n  @if map-get($kittn-activate, box-sizing) { box-sizing: border-box; }\n\n  @if map-get($kittn-typo, unit) == rem {\n    @if $kittn-active-responsive-fonts != false {\n      @include responsive-fontsize($kittn-active-responsive-fonts);\n\n    } @else {\n      font-size: map-get($kittn-typo, base-scale) + 0%;\n    }\n\n  } @else {\n    font-size: map-get($kittn-typo, base-scale) + 0%;\n  }\n}\n\n// Global Activation\n* {\n  @if map-get($kittn-activate, antialias) { @include antialias; }\n\n  @if map-get($kittn-activate, box-sizing) == true {\n    &, &:before, &:after {\n      box-sizing: inherit;\n    }\n  }\n}\n\nhtml,\nbody {\n  min-height: 100%;\n}\n\nbody,\n.sg-body {\n  margin: 0;\n  position: relative;\n  color: map-get($kittn-color-route, text);\n  @include fontsize(map-get($kittn-typo, base-size));\n  @include lineheight(map-get($kittn-typo, line-height));\n\n  @if map-get($kittn-activate, hyphens) { @include word-wrap; }\n\n  @if map-get($kittn-color-route, body) { background-color: map-get($kittn-color-route, body); }\n\n  @if map-get($kittn-typo-style, base-weight) { font-weight: map-get($kittn-typo-style, base-weight); }\n}\n\n@if map-get($kittn-activate, viewport-fix) { @-ms-viewport { width: device-width; }}\n\n@if map-get($kittn-activate, hyphens) == true {\n  abbr, acronym, code, dir, kbd,\n  listing, plaintext, q, samp, tt, var, xmp {\n    hyphens: none;\n  }\n}\n\nh1, h2, h3, h4, h5, h6,\np, blockquote, pre,\ndl, dd, ol, ul {\n  margin-top: 0\n}\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary\n{display: block;\n}\n\naudio, progress, canvas, video {\n  display: inline-block;\n}\n\nbody, button, input, select, textarea, .sg-body {\n  font-family: map-get($kittn-typo-style, base-font);\n}\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\nselect, option, button, a, input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"] {\n  cursor: pointer;\n}\n\n[hidden],template {\n  display: none;\n}\n\n/*\n  Typosizes\n\n  A definition of all fontsizes (classes and tags)\n\n  Styleguide 1.1\n*/\n\n/*\n  Main Heading Style\n\n  markup:\n  <h1>Lorem Ipsum it dolor</h1>\n  <h3>Lorem Ipsum it dolor</h3>\n\n  Styleguide 1.1.1\n*/\n%heading {\n  text-rendering: optimizeLegibility;\n\n  @if map-get($kittn-global-heading,lineheight) != false {\n    @if map-get($kittn-global-heading,lineheight) == d {\n      line-height: 1;\n\n    } @else {\n      @include lineheight(map-get($kittn-global-heading,lineheight));\n    }\n  }\n\n  @if map-get($kittn-global-heading,marginbottom) != false {\n    @include marginbottom(map-get($kittn-global-heading,marginbottom));\n  }\n\n  @if map-get($kittn-global-heading,fontweight) != false {\n    font-weight: map-get($kittn-global-heading,fontweight);\n  }\n\n  @if map-get($kittn-typo-style, heading-font) != false OR map-get($kittn-color-route, headline) != false {\n    @if map-get($kittn-typo-style, heading-font) != false {\n      font-family: map-get($kittn-typo-style, heading-font);\n    }\n\n    @if map-get($kittn-color-route, headline) != false {\n      color: map-get($kittn-color-route, headline);\n    }\n  }\n}\n\n// Generate Fontsizes\n@if $kittn-generate-typostyles { @include typogenerator; }\n\n\n/*\n  Typostyles and Elements\n\n  Styleguide 1.2\n*/\n\n/*\n  Header-Stack\n\n  Group Wrapper for Headlines\n\n  markup:\n  <header class=\"header-stack\">\n    <h1>Main Headline</h1>\n    <h2 class=\"h4\">Subheadline</h2>\n  </header>\n\n  Styleguide 1.2.1\n*/\n.header-stack {\n  @if map-get($kittn-global-heading,marginbottom) != false {\n    @include marginbottom(map-get($kittn-global-heading,marginbottom));\n  }\n\n  > * {\n    margin-bottom: 0\n  }\n\n  @if map-get($kittn-typo-margin,top) > 0 {\n\n    p + & {\n      @include margintop(map-get($kittn-typo-margin, top));\n    }\n  }\n}\n\n/*\n  Paragraph\n\n  Style for Texts\n\n  markup:\n  <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.2\n*/\np {\n\n  @include marginbottom(map-get($kittn-typo-margin, bottom));\n\n  @if map-get($kittn-typo-margin,top) > 0 {\n    + h1, + h2, + h3, + h4, + h5, + h6 {\n      @include margintop(map-get($kittn-typo-margin, bottom) * 1.8);\n    }\n  }\n}\n\n/*\n  Links\n\n  Style for Text Links\n\n  markup:\n  <a href=\"#\">This is a link</a>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.3\n*/\na {\n  outline: 0;\n  line-height: inherit;\n  background: transparent;\n  color: map-get($kittn-color-route,link);\n\n  @if map-get($kittn-typo-style,link-decoration) {\n    text-decoration: underline;\n  } @else {\n    text-decoration: none;\n  }\n\n  &:hover,\n  &.link-hover {\n    color: map-get($kittn-color-route,link-hover);\n\n    @if map-get($kittn-typo-style,link-decoration-hover) {\n      text-decoration: underline;\n    } @else {\n      text-decoration: none;\n    }\n  }\n\n  &:active,\n  &.is-active {\n    color: map-get($kittn-color-route,link-active);\n  }\n\n  &:hover,\n  &:active,\n  &:focus {\n    outline: 0;\n  }\n}\n\n/*\n  Strong\n\n  Bold Style for Texts\n\n  markup:\n  <p><strong>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat.</strong> sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.4\n*/\nstrong {\n  @if map-get($kittn-typo-style,bold-weight) { font-weight: map-get($kittn-typo-style,bold-weight); }\n\n  @if map-get($kittn-typo-style,bold-font) { font-family: map-get($kittn-typo-style,bold-font); }\n}\n\n/*\n  Italic\n\n  Italic Style for Texts\n\n  markup:\n  <p><em>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat.</em> sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.5\n*/\nem, dfn {\n  @if map-get($kittn-typo-style,italic-style) { font-style: map-get($kittn-typo-style,italic-style); }\n\n  @if map-get($kittn-typo-style,italic-font) != false { font-family: map-get($kittn-typo-style,italic-font); }\n}\n\n/*\n  Abbr\n\n  markup:\n  <abbr>Lorem ipsum dolor sit amet, consetetur sadipscing elitr</abbr>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.6\n*/\nabbr {\n  font-variant: small-caps;\n  text-transform: lowercase;\n\n  &[title] {\n    border-bottom: 1px dotted;\n\n    &:hover {\n      cursor: help;\n    }\n  }\n}\n\n\n/*\n  Hightlight, Mark\n\n  For Highlightning text passages, also for hightlightning with mouse select\n\n  markup:\n  <p><mark>Lorem ipsum dolor sit amet</mark>, consetetur sadipscing elitr</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.7\n*/\nmark, .hightlight, ::selection {\n  background: map-get($kittn-color-route,highlight-bg);\n  color: map-get($kittn-color-route,hightlight-text);\n}\n\n\n/*\n  Lists\n\n  Styles for Unordered, Ordered and Definition Lists. If a `<ul>` or `<dl>` is wrapped in a `<nav>`, the list got an neutral style.\n\n  markup:\n  <ul>\n    <li>List Entry</li>\n    <li>List Entry</li>\n    <li>List Entry</li>\n  </ul>\n  <ol>\n    <li>List Entry</li>\n    <li>List Entry</li>\n    <li>List Entry</li>\n  </ol>\n  <dd>\n    <dt>List Entry</dt>\n    <dd>List Entry</dd>\n  </dd>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.8\n*/\nul,dl {\n  list-style-type: map-get($kittn-typo-sizes,list-style);\n  padding-left: map-get($kittn-typo-sizes,list-margin) + 0px;\n  @include marginbottom(map-get($kittn-typo-margin,bottom));\n\n  nav & {\n    list-style-type: none;\n    margin-bottom: 0;\n    padding-left: 0;\n  }\n}\n\nol {\n  padding-left: map-get($kittn-typo-sizes,list-margin) + 2px;\n  @include marginbottom(map-get($kittn-typo-margin,bottom));\n}\n\nli, dt, dd {\n  @if map-get($kittn-typo-sizes,list-fontsize) != false {\n    @include fontsize(map-get($kittn-typo-sizes,list-fontsize));\n  }\n\n  @if map-get($kittn-typo-sizes,list-lineheight) != false {\n    @include lineheight(map-get($kittn-typo-sizes,list-lineheight));\n  }\n}\n\nli {\n  > ul,  > ol {\n    margin-bottom: 0;\n  }\n}\n\ndt, dd {\n  > dl {\n    margin-bottom: 0;\n  }\n}\n\n/*\n  Hairline\n\n  markup:\n  <hr>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.9\n*/\nhr {\n  @include marginbottom(map-get($kittn-typo-margin, bottom));\n  height: map-get($kittn-hairline,height) + 0px;\n  border-left: 0;\n  border-bottom: 0;\n  border-right: 0;\n  border-top: (map-get($kittn-hairline,height) + 0px) map-get($kittn-hairline,style) map-get($kittn-hairline,color);\n  position: relative;\n\n  @if map-get($kittn-typo-margin,top) > 0 {\n    @include margintop(map-get($kittn-typo-margin,bottom)); }\n}\n\n/*\n  Code\n\n  For write some code snippets\n\n  markup:\n  <code>\n    <pre>\n      <div>some Code</div>\n    </pre>\n  <code>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.10\n*/\ncode, kbd, pre, samp {\n  @if map-get($kittn-typo-sizes, code-fontsize) != false {\n    @include fontsize(map-get($kittn-typo-sizes, code-fontsize));\n  }\n\n  @if map-get($kittn-typo-sizes, code-lineheight) != false {\n    @include lineheight(map-get($kittn-typo-sizes, code-lineheight));\n  }\n\n  @if map-get($kittn-typo-style, code-weight) != false {\n    font-weight: map-get($kittn-typo-style, code-weight);\n  }\n\n  @if map-get($kittn-typo-style, code-font) != false {\n    font-family: map-get($kittn-typo-style, code-font);\n\n  } @else {\n    font-family: monospace, serif;\n  }\n}\n\npre {\n  white-space: pre;\n  @include marginbottom(map-get($kittn-typo-margin,bottom));\n\n  > code {\n    word-wrap: normal;\n    white-space: pre-wrap;\n  }\n}\n\ncode {\n  white-space: pre;\n}\n\n/*\n  Quotes\n\n  markup:\n  <q>Say something</q>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.11\n*/\nq {\n  quotes: \"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\";\n\n  &:before, &:after {\n    content: '';\n    content: none;\n  }\n}\n\n/*\n  Small Fonts\n\n  Some Styles for Smaller Texts\n\n  markup:\n  <small>Small Text</small><br>\n  <sup>Superposition</sup><br>\n  <sub>Subposition</sub>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.12\n*/\nsmall {\n  font-size: 80%;\n}\n\nsub, sup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\ni {\n  font-style: normal;\n  display: inline-block;\n}\n\n/*\n  Blockquotes\n\n  Simple Style for Blockquotes\n\n  markup:\n  <blockquote>\n    <p>Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n    <cite>Author from Lorem Ipsum</cite>\n  </blockquote>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.13\n*/\nblockquote {\n  margin-left: 0;\n  margin-right: 0;\n  @include marginbottom(map-get($kittn-typo-margin,bottom));\n\n  & p {\n    @if map-get($kittn-typo-sizes,quote-fontsize) != false {\n      @include fontsize(map-get($kittn-typo-sizes,quote-fontsize));\n    }\n\n    @if map-get($kittn-typo-sizes,quote-lineheight) != false {\n      @include lineheight(map-get($kittn-typo-sizes,quote-lineheight));\n    }\n  }\n\n  cite {\n    font-style: normal;\n\n    @if map-get($kittn-typo-sizes,cite-fontsize) != false {\n      @include fontsize(map-get($kittn-typo-sizes,cite-fontsize));\n    }\n\n    @if map-get($kittn-typo-sizes,cite-lineheight) != false {\n      @include lineheight(map-get($kittn-typo-sizes,cite-lineheight));\n    }\n\n    &:before {\n      content : '\\2014 \\0020';\n    }\n  }\n\n  // The Last off all inner Elements get not bottom spacing\n  *:last-child {\n    margin-bottom: 0;\n  }\n}\n\nblockquote, q, cite {\n  @if map-get($kittn-typo-style, quote-font) != false {\n    font-family: map-get($kittn-typo-style, quote-font);\n  }\n\n  @if map-get($kittn-typo-style, quote-weight) != false {\n    font-weight: map-get($kittn-typo-style, quote-weight);\n  }\n\n  @if map-get($kittn-typo-style, quote-style) != false {\n    font-style: map-get($kittn-typo-style, quote-style);\n  }\n\n  @if map-get($kittn-color-route, blockquote) != false {\n    color: map-get($kittn-color-route, blockquote);\n  }\n}\n\n/*\n  Base Media Elements\n\n  Styleguide 1.3\n*/\n\n/*\n  Image\n\n  Base Style for Images. Images without `height` and `width` are fluid, to there max-width.\n\n  markup:\n  <img src=\"http://lorempixel.com/400/200/cats\"><br>\n  <img src=\"http://lorempixel.com/400/200/cats\" height=\"300\" width=\"200\">\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.3.1\n*/\nimg {\n  border: 0;\n  max-width: 100%;\n  height: auto;\n\n  &[width],\n  &[height] {\n    max-width: none;\n  }\n}\n\n/*\n  Figure\n\n  Is a container for Images, all images inside `<figure>` fill the complete space.\n\n  markup:\n  <figure><img src=\"http://lorempixel.com/500/400/cats\"></figure>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.3.2\n*/\nfigure {\n  margin: 0;\n\n  img {\n    display: block;\n    max-width: none;\n    width: 100%;\n  }\n}\n\n\n/*\n  Map\n\n  Simple Wrapper to remove `max-width` from embed google Maps\n\n  markup:\n  <div class=\"map_canvas\"><iframe...></div>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.3.3\n*/\n#map_canvas,\n.map_canvas {\n  img, embed, object {\n    max-width: none !important;\n  }\n}\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/*\n  Video\n\n  Make Video Elements Fluid\n\n  markup:\n  <video></video>\n\n  sg-wrapper:\n  <div class=\"sg-body\" style=\"height: 0; overflow: hidden;\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.3.4\n*/\nvideo {\n  width: 100% !important;\n  height: auto !important;\n}\n\n/*\n  Base Form Elements\n\n  Styleguide 1.4\n*/\n\n\n/*\n  Fieldset\n\n  markup:\n  <fieldset>Lorem Ipsum</fieldset>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.1\n*/\nfieldset {\n  border: 0;\n  padding: 0;\n}\n\n/*\n  Legend\n\n  markup:\n  <legend>Lorem Ipsum</legend>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.2\n*/\nlegend {\n  border: 0;\n  padding: 0;\n  white-space: normal;\n}\n\n/*\n  Input\n\n  markup:\n  <input type=\"text\" placeholder=\"Some Values...\">\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.3\n*/\ninput {\n  line-height: normal;\n  &:focus {\n    outline: 0;\n  }\n}\n\n\n/*\n  Buttons, Selects, Inputs\n\n  markup:\n  <button>Button</button><br>\n  <input type=\"submit\" value=\"Submit\"><br>\n  <input type=\"reset\" value=\"Reset\"><br>\n  <input type=\"checkbox\" value=\"1\"><br>\n  <input type=\"radio\" value=\"1\"><br>\n  <input type=\"search\" value=\"1\"><br>\n\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.4\n*/\nbutton, optgroup, input, select, textarea {\n  font-size: inherit;\n  margin: 0;\n  color: inherit;\n}\n\nbutton {\n  line-height: normal;\n  overflow: visible;\n}\n\nbutton, select {\n  text-transform: none;\n}\n\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: none;\n}\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  cursor: pointer;\n  padding: 0;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n}\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\nbutton:focus {\n  outline: none;\n}\n\n/*\n  Textarea\n\n  markup:\n  <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.5\n*/\ntextarea {\n  overflow: auto;\n  vertical-align: top;\n  resize: vertical;\n}\n\n/*\n  Table Elements\n\n  Styleguide 1.5\n*/\n\n/*\n  Table\n\n  markup:\n  <table>\n    <tr>\n      <th>Table</th>\n      <th>Head</th>\n    <tr>\n    <tr>\n      <td>Table</td>\n      <td>Cell</td>\n    </tr>\n  </table>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.5.1\n*/\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n","// ===================================================\n// Responsive Fontsize Generator\n// ===================================================\n\n/// Generate Responsive Fonts, based on the Breakpoint Map\n///\n/// @group generators\n///\n/// @param  {number} $base - The Base Font Size in percent\n@mixin responsive-fontsize($base) {\n  $list: ();\n\n  // Move Values in a list\n  @each $name, $entry in $kittn-breakpoint-map {\n    @if map-get($entry, fontsize) != false {\n      $list: append($list, (map-get($entry,size) map-get($entry, fontsize)), comma);\n    }\n  }\n\n  // Delete any Duplicates\n  $list: sl-remove-duplicates($list);\n\n  // Sort the List\n  @if map-get($kittn-activate, mobile-first) != true { $list: sl-reverse($list); }\n\n  font-size: strip-units($base) + 0%;\n  // Build the Stepped Width\n  @for $i from 1 through length($list) {\n    $l: nth($list,$i);\n\n    @media screen and (if(map-get($kittn-activate, mobile-first),min-width,max-width): nth($l,1)) {\n      font-size: nth($l,2) + 0%;\n    }\n  }\n}\n","// ============================================================\n//          Base Setup\n// ------------------------------------------------------------\n\n// Map with all breakpoints and related behavior\n//\n// @type map\n//\n// @prop {string} base.key                  - Breakpoint Name\n// @prop {number} base.key.size             - The width that activate the Trigger\n// @prop {bool}   base.key.step             - Set the threshold for the grid-stepper mixin\n// @prop {number} base.key.fontsize         - Rewrite the Basefontsize for this breakpoint\n$kittn-breakpoint-map: (\n  'xs': (\n    size: 320px,\n    step: true,\n    fontsize: false\n  ),\n  's': (\n    size: 480px,\n    step: false,\n    fontsize: false\n  ),\n  'sm': (\n    size: 560px,\n    step: true,\n    fontsize: false\n  ),\n  'm': (\n    size: 768px,\n    step: true,\n    fontsize: 85\n  ),\n  'ml': (\n    size: 960px,\n    step: true,\n    fontsize: 90\n  ),\n  'l': (\n    size: 1180px,\n    step: true,\n    fontsize: 100\n  )\n);\n\n// Define Pagesize\n$kittn-page-size: (\n  minsize: 320px,\n  maxsize: 1200px\n);\n\n// Define the different fontfaces that are loaded locally\n//\n// @type map\n//\n// @prop {map}    base.fontname                  - CSS Fontname\n// @prop {map}    base.fontname.variant          - Used for different font fonts\n// @prop {bool}   base.fontname.variant.filename - Filename, when 'false' the Fontname will be used\n// @prop {string} base.fontname.variant.weight   - Associated Fontweight\n// @prop {string} base.fontname.variant.style    - Associated Fontstyle\n// @prop {bool}   base.fontname.variant.short    - Use the Short Syntax for Fontfaces (Use not when Support => IE8 or Android => 4.3)\n$kittn-fontface-map: (\n  // EXAMPLE\n  // fontname: (\n  //   1: (\n  //     filename: false,\n  //     weight: normal,\n  //     style: normal,\n  //     short: true\n  //   ),\n  //   2: (\n  //     filename: false,\n  //     weight: normal,\n  //     style: italic,\n  //     short: true\n  //   )\n  // )\n);\n\n// Iconfont Configuration\n//\n// @prop {string} base.name                 - Iconfont Name\n// @prop {string} base.prefix               - Icon Prefix\n$kittn-iconfont: (\n  name: false,\n  prefix: 'f-icon'\n);\n\n// Base Typo Setup\n//\n// @type map\n//\n// @prop {string} base.unit                 - Typo Unit 'px' or 'rem'\n// @prop {number} base.base-scale           - Fontsize on `<html>`\n// @prop {number} base.base-size            - Base Fontsize in `px`\n// @prop {number} base.line-height          - Base Line-Height\n$kittn-typo: (\n  unit: rem,\n  base-scale: 85,\n  base-size: 16,\n  line-height: 21\n);\n\n// Activates the Responsive Fontsize Generator\n//\n// @type Bool | Number\n$kittn-active-responsive-fonts: 80;\n\n// Default Margin for Typographic Elements (set on '0' when not needed)\n//\n// @type Map\n//\n// @prop {number} base.top                 - Top Margin Size\n// @prop {number} base.bottom              - Bottom Margin Size\n$kittn-typo-margin: (\n  top: gap(1.25),\n  bottom: gap(1)\n);\n\n// Base Typo and Font Styling\n//\n// @type Map\n//\n// @prop {string}      base.base-font             - Basis text font\n// @prop {string|bool} base.base-weight           - Basis font weight\n// @prop {string|bool} base.heading-font          - Heading font\n// @prop {string|bool} base.bold-font             - Font for bold type\n// @prop {string|bool} base.bold-weight           - Font weight for bold typo\n// @prop {string|bool} base.italic-font           - Font for italic style\n// @prop {string|bool} base.italic-style          - Font style for italic typo\n// @prop {bool}        base.link-decoration       - Textlink Decoration for `normal` state\n// @prop {bool}        base.link-decoration-hover - Textlink Decoration for `hover` state\n// @prop {string|bool} base.quote-font            - Font for quotes\n// @prop {string|bool} base.quote-weight          - Quote font weight\n// @prop {string|bool} base.quote-style           - Quote font style\n// @prop {string|bool} base.code-font             - Font for Code\n// @prop {string|bool} base.code-weight           - Font weight for Code typo\n$kittn-typo-style: (\n  base-font: ff('helvetica'),\n  base-weight: false,\n  heading-font: false,\n  bold-font: false,\n  bold-weight: bold,\n  italic-font: false,\n  italic-style: italic,\n  link-decoration: false,\n  link-decoration-hover: false,\n  quote-font: false,\n  quote-weight: false,\n  quote-style: italic,\n  code-font: ff('monospace'),\n  code-weight: normal\n);\n\n// Individual typo settings for separate HTML elements\n//\n// @type Map\n//\n// @prop {number|bool} base.list-fontsize     - Fontsize for list elements\n// @prop {number|bool} base.list-lineheight   - Lineheight for list elements\n// @prop {number|bool} base.list-margin       - Listelement margin on the left side\n// @prop {number|bool} base.list-style        - Base liststyle ('disc', 'square', 'circle')\n// @prop {number|bool} base.quote-fontsize    - Fontsize for Quotes\n// @prop {number|bool} base.quote-lineheight  - Lineheight for Quotes\n// @prop {number|bool} base.cite-fontsize     - Fontsize for Cite\n// @prop {number|bool} base.cite-lineheight   - Lineheight for Cite\n// @prop {number|bool} base.code-fontsize     - Fontsize for Code Typo\n// @prop {number|bool} base.code-lineheight   - Lineheight for Code Typo\n$kittn-typo-sizes: (\n  list-fontsize: false,\n  list-lineheight: false,\n  list-margin: gap(1),\n  list-style: disc,\n  quote-fontsize: map-get($kittn-typo, base-size) + 2,\n  quote-lineheight: map-get($kittn-typo, line-height) + 6,\n  cite-fontsize: map-get($kittn-typo, base-size) - 1,\n  cite-lineheight: map-get($kittn-typo, line-height) + 0,\n  code-fontsize: false,\n  code-lineheight: false\n);\n\n// Global Heading Stylings\n//\n// @type Map\n//\n// @prop {string|bool} base.lineheight     - false' or 'd' (for line-height:1) or a unitless number\n// @prop {number|bool} base.marginbottom   - Bottom Margin\n// @prop {number|bool} base.fontweight     - Heading Fontweight\n$kittn-global-heading: (\n  lineheight: false,\n  marginbottom: 0,\n  fontweight: false\n);\n\n// All possible Typostyles in a Map.\n//\n// @type Map\n//\n// @prop {map}         base.type               - Name of Typodefinition\n// @prop {number}      base.type.font-size     - Fontsize\n// @prop {string|bool} base.type.line-height   - Individual lineheight (`d`: line-height = 1, `c`: sass calculated, `number`)\n// @prop {number}      base.type.margin-bottom - Bottom Margin\n// @prop {number|bool} base.type.font-weight   - Fontweight\n// @prop {bool}        base.type.tag           - If it is activated, it generates a class from Key\n// @prop {string|bool} base.type.extend        - The definition can be linked to a global definition\n$kittn-typostyles-map: (\n  h1: (\n    font-size: 36,\n    line-height: d,\n    margin-bottom: gap(0.5),\n    font-weight: false,\n    tag: true,\n    extend: '%heading'\n  ),\n  h2: (\n    font-size: 32,\n    line-height: c,\n    margin-bottom: gap(0.5),\n    font-weight: false,\n    tag: true,\n    extend: '%heading'\n  ),\n  h3: (\n    font-size: 29,\n    line-height: c,\n    margin-bottom: gap(0.5),\n    font-weight: false,\n    tag: true,\n    extend: '%heading'\n  ),\n  h4: (\n    font-size: 25,\n    line-height: c,\n    margin-bottom: gap(0.5),\n    font-weight: false,\n    tag: true,\n    extend: '%heading'\n  ),\n  h5: (\n    font-size: 22,\n    line-height: c,\n    margin-bottom: gap(0.5),\n    font-weight: false,\n    tag: true,\n    extend: '%heading'\n  ),\n  h6: (\n    font-size: 19,\n    line-height: c,\n    margin-bottom: gap(0.5),\n    font-weight: false,\n    tag: true,\n    extend: '%heading'\n  )\n);\n\n// Generate all Fontstyles with classes\n//\n// @type Bool\n$kittn-generate-typostyles: true;\n\n// Definition of colors in the frontend. Additional variants can be added to the respective color group.\n//\n// @type Map\n//\n// @prop {map}         base.type               - Colorgroup\n// @prop {map}         base.type.color         - Main Color Value\n\n$kittn-color-map: (\n  'primary': (\n    color: #29b8f2\n  ),\n  'main': (\n    color: #242424\n  ),\n  'gray': (\n    color: #636363\n  ),\n  'darkwhite': (\n    color: #eeeeee\n  ),\n  'white': (\n    color: #fff\n  ),\n  'black': (\n    color: #000\n  ),\n  'body': (\n    color: #f8f8f8\n  ),\n  'alert': (\n    color: #ef462a\n  ),\n  'success': (\n    color: #38cc3b\n  ),\n  'warning': (\n    color: #f5a11c\n  ),\n  'highlight': (\n    color: #f8e64b\n  )\n);\n\n// Color definitions of HTML elements\n//\n// @type Map\n//\n// @prop {color}       base.body               - Body background color\n// @prop {color}       base.text               - Text color\n// @prop {color|bool}  base.headline           - Headline text color\n// @prop {color|bool}  base.blockquote         - Quote text color\n// @prop {color|bool}  base.highlight-bg       - Hightlight background color\n// @prop {color|bool}  base.highlight-text     - Hightlight text color\n// @prop {color|bool}  base.link               - Link color\n// @prop {color|bool}  base.link-hover         - Link hover color\n// @prop {color|bool}  base.link-active        - Link active color\n$kittn-color-route: (\n  body: c('body'),\n  text: c('main'),\n  headline: c('gray'),\n  blockquote: c('main'),\n  highlight-bg: lighten(c('primary'),25),\n  highlight-text: darken(c('primary'),10),\n  link: c('primary'),\n  link-hover: darken(c('primary'),15),\n  link-active: darken(c('primary'),25)\n);\n\n// Hairline Styling\n//\n// @type Map\n//\n// @prop {color}       base.height             - Hairline height\n// @prop {color}       base.style              - Line style\n// @prop {color}       base.color              - Body background color\n$kittn-hairline: (\n  height: 1,\n  style: dashed,\n  color: c('darkwhite')\n);\n\n// Table Styling\n//\n// @type Map\n//\n// @prop {color}       base.background         - Table background color\n// @prop {color}       base.background-zebra   - Alternated background color\n// @prop {color}       base.background-hover   - Hover background color\n// @prop {color}       base.border-color       - Border color\n// @prop {number}      base.margin             - Table margin\n// @prop {number}      base.padding            - Tablecell padding\n// @prop {number}      base.trigger            - Trigger Size for responsive Tables\n$kittn-tables: (\n  background: transparent,\n  background-zebra: tint(c(primary),20),\n  background-hover: lighten(c(primary),20),\n  border-color: c('gray'),\n  margin: 20px,\n  padding: 8px,\n  trigger: 400px,\n);\n","// ===================================================\n// Vertical Sizes\n// ===================================================\n\n/// Recalculate the px values to rem, with lines option\n///\n/// @group methods - vertical sizes\n///\n/// @param   {*}      $arg  - Attribute\n/// @param   {number} $size - Value\n///\n/// @example scss - scss\n///   .box {\n///     @include remsize(font-size, 3);\n///   }\n///\n/// @example css - css\n///   .box {\n///     font-size: 3.9375rem;\n///   }\n@mixin remsize($arg, $lines) {\n  @if map-get($kittn-typo, unit) == px {\n    #{$arg}: $lines * map-get($kittn-typo, line-height) + 0px;\n  }\n\n  @if map-get($kittn-typo, unit) == rem {\n    #{$arg}: rem($lines * map-get($kittn-typo, line-height));\n  }\n}\n\n/// Recalculate the px values to rem\n///\n/// @group methods - vertical sizes\n///\n/// @param   {*}      $arg  - Attribute\n/// @param   {number} $size - Value\n///\n/// @example scss - scss\n///   .box {\n///     @include pxsize(font-size, 13);\n///   }\n///\n/// @example css - css\n///   .box {\n///     font-size: 0.8125rem;\n///   }\n@mixin pxsize($arg, $size) {\n  @if unitless($size) {\n    @if map-get($kittn-typo, unit) == px {\n      #{$arg}: $size + 0px;\n    }\n\n    @if map-get($kittn-typo, unit) == rem {\n      #{$arg}: rem($size);\n    }\n  } @else {\n    #{$arg}: $size;\n  }\n}\n\n/// Calculate the Rem Sizes, with Baseline Option\n///\n/// @group methods - vertical sizes\n///\n/// @param  {*}      $arg      - Attribute\n/// @param  {number} $size     - Size\n/// @param  {*}      $baseline - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include rem(font-size,14);\n///   }\n///\n/// @example css - css\n///   .box {\n///     font-size: 0.875rem;\n///   }\n@mixin rem($arg, $size, $baseline: map-get($kittn-activate, baseline)) {\n  @if unitless($size) {\n    $size: strip-units($size);\n  }\n\n  @if $baseline == true {\n    $lines: ceil($size / map-get($kittn-typo, line-height));\n    @include remsize($arg, $lines);\n  } @else {\n    @include pxsize($arg, $size);\n  }\n}\n\n/// Calculate the Lineheight from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {number} $size     - Size\n/// @param  {*}      $baseline - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include lineheight(32);\n///   }\n///\n/// @example css - css\n///   .box {\n///     line-height: 2rem;\n///   }\n@mixin lineheight($size, $baseline: map-get($kittn-activate, baseline)) {\n  @include rem(line-height, $size, $baseline);\n}\n\n/// Caluclate the Font Size in PX to REM with Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number} $size - Font Size\n///\n/// @example scss - scss\n///   .box {\n///     @include fontsize(14);\n///   }\n///\n/// @example css - css\n///   .box {\n///     font-size: 0.875rem;\n///   }\n@mixin fontsize($size) {\n  @include pxsize(font-size, $size);\n}\n\n/// Calculate Fontsize and Lineheight\n///\n/// @group methods - vertical sizes\n///\n/// @param  {number} $fontsize     - Font Size\n/// @param  {number} $lineheight [false] - Lineheight for the Font - can be false than used the factor\n/// @param  {number} $factor [1.2] - The Calculationfactor\n///\n/// @example scss - scss\n///   .box {\n///     @include fontcalc(14);\n///   }\n///\n/// @example css - css\n///   .box {\n///     font-size: 0.875rem;\n///     line-height: 1.05rem;\n///   }\n@mixin fontcalc($fontsize, $lineheight: false, $factor: 1.2) {\n  @include fontsize($fontsize);\n\n  @if $lineheight == false {\n    @include lineheight($fontsize * $factor);\n  } @else {\n    @include lineheight($lineheight);\n  }\n}\n\n/// Calculate the Margin Bottom from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number}  $size     - Size\n/// @param  {*}      $baseline  - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include marginbottom(30);\n///   }\n///\n/// @example css - css\n///   .box {\n///     margin-bottom: 1.875rem;\n///   }\n@mixin marginbottom($size, $baseline: map-get($kittn-activate, baseline)){\n  @include rem(margin-bottom, $size, $baseline);\n}\n\n/// Calculate the Margin Top from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number}  $size     - Size\n/// @param  {*}      $baseline  - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include margintop(30);\n///   }\n///\n/// @example css - css\n///   .box {\n///     margin-top: 1.875rem;\n///   }\n@mixin margintop($size, $baseline: map-get($kittn-activate, baseline)) {\n  @include rem(margin-top,$size, $baseline);\n}\n\n/// Calculate the Margin Left from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number}  $size     - Size\n/// @param  {*}      $baseline  - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include marginleft(30);\n///   }\n///\n/// @example css - css\n///   .box {\n///     margin-left: 1.875rem;\n///   }\n@mixin marginleft($size, $baseline: map-get($kittn-activate, baseline)) {\n  @include rem(margin-left,$size, $baseline);\n}\n\n/// Calculate the Margin Right from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number}  $size     - Size\n/// @param  {*}      $baseline  - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include marginright(30);\n///   }\n///\n/// @example css - css\n///   .box {\n///     margin-right: 1.875rem;\n///   }\n@mixin marginright($size, $baseline: map-get($kittn-activate, baseline)) {\n  @include rem(margin-right,$size, $baseline);\n}\n\n/// Calculate the Padding Top from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number}  $size     - Size\n/// @param  {*}      $baseline  - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include paddingtop(30);\n///   }\n///\n/// @example css - css\n///   .box {\n///     padding-top: 1.875rem;\n///   }\n@mixin paddingtop($size, $baseline: map-get($kittn-activate, baseline)) {\n  @include rem(padding-top, $size, $baseline);\n}\n\n/// Calculate the Padding Bottom from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number}  $size     - Size\n/// @param  {*}      $baseline  - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include paddingbottom(30);\n///   }\n///\n/// @example css - css\n///   .box {\n///     padding-bottom: 1.875rem;\n///   }\n@mixin paddingbottom($size, $baseline: map-get($kittn-activate, baseline)) {\n  @include rem(padding-bottom, $size, $baseline);\n}\n\n/// Calculate the Padding Left from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number}  $size     - Size\n/// @param  {*}      $baseline  - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include paddingleft(30);\n///   }\n///\n/// @example css - css\n///   .box {\n///     padding-left: 1.875rem;\n///   }\n@mixin paddingleft($size, $baseline: map-get($kittn-activate, baseline)) {\n  @include rem(padding-left, $size, $baseline);\n}\n\n/// Calculate the Padding Right from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number}  $size     - Size\n/// @param  {*}      $baseline  - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include paddingright(30);\n///   }\n///\n/// @example css - css\n///   .box {\n///     padding-right: 1.875rem;\n///   }\n@mixin paddingright($size, $baseline: map-get($kittn-activate, baseline)) {\n  @include rem(padding-right, $size, $baseline);\n}\n\n/// Calculate the Height from PX to REM, provides a px Fallback\n///\n/// @group methods - vertical sizes\n///\n/// @param  {Number}  $size     - Size\n/// @param  {*}      $baseline  - When 'true', the Value follow the Baselinerule\n///\n/// @example scss - scss\n///   .box {\n///     @include height(200);\n///   }\n///\n/// @example css - css\n///   .box {\n///     height: 12.5rem;\n///   }\n@mixin height($size, $baseline: map-get($kittn-activate, baseline)) {\n  @include rem(height, $size, $baseline);\n}\n\n\n","// ===================================================\n// Maps Helper\n// ===================================================\n\n/// Calculate a Fontsize to REM\n///\n/// @group core - rem\n///\n/// @access private\n@function rembase() {\n  @if map-get($kittn-typo, unit) == rem {\n    @return 16;\n  } @else {\n    @return 16 / 100 * map-get($kittn-typo, base-scale);\n  }\n}\n\n/// Calculate px in rem\n///\n/// @group core - rem\n///\n/// @require {function} rembase\n///\n/// @param  {number} $px   - The Size in PX\n/// @param  {number} $base - The Base for the calculation\n///\n/// @return {Number}  Return the size in rem\n///\n/// @example scss - scss\n///   .test {\n///     font-size: rem(14);\n///   }\n///\n/// @example css - css\n///   .test {\n///     font-size: 0.875rem;\n///   }\n@function rem($px, $base: rembase()) {\n  @if unitless($px) {\n    @return #{$px / $base}rem;\n\n  } @else {\n    $pxpx: strip-units($px);\n    @return #{$pxpx / $base}rem;\n  }\n}\n","// A Map for predefined Fontstacks\n//\n// @type Map\n$kittn-fontstack-map: (\n  'baskerville': (\n    Baskerville, 'Baskerville Old Face', 'Hoefler Text', Garamond, 'Times New Roman', serif\n  ),\n  'big caslon': (\n    'Big Caslon', 'Book Antiqua', 'Palatino Linotype', Georgia, serif\n  ),\n  'bodoni': (\n    'Bodoni MT', Didot, 'Didot LT STD', 'Hoefler Text', Garamond, 'Times New Roman', serif\n  ),\n  'antiqua': (\n    'Book Antiqua', Palatino, 'Palatino Linotype', 'Palatino LT STD', Georgia, serif\n  ),\n  'cambria': (\n    Cambria, Georgia, serif\n  ),\n  'constantia': (\n    Constantia, Palatino, 'Palatino Linotype', 'Palatino LT STD', Georgia, serif\n  ),\n  'didot': (\n    Didot, 'Didot LT STD', 'Hoefler Text', Garamond, 'Times New Roman', serif\n  ),\n  'garamond': (\n    Garamond, Baskerville, 'Baskerville Old Face', 'Hoefler Text', 'Times New Roman', serif\n  ),\n  'goudy': (\n    'Goudy Old Style', Garamond, 'Big Caslon', 'Times New Roman', serif\n  ),\n  'hoefler': (\n    'Hoefler Text', 'Baskerville Old Face', Garamond, 'Times New Roman', serif\n  ),\n  'lucida-bright': (\n    'Lucida Bright', Georgia, serif\n  ),\n  'palatino': (\n    Palatino, 'Palatino Linotype', 'Palatino LT STD', 'Book Antiqua', Georgia, serif\n  ),\n  'times': (\n    'Times New Roman', Times, serif\n  ),\n  'serif': (\n    serif\n  ),\n  'calibri': (\n    Calibri, Candara, Segoe, 'Segoe UI', Optima, Arial, sans-serif\n  ),\n  'candara': (\n    Candara, Calibri, Segoe, 'Segoe UI', Optima, Arial, sans-serif\n  ),\n  'franklin': (\n    'Franklin Gothic Medium', Arial, sans-serif\n  ),\n  'futura': (\n    Futura, 'Trebuchet MS', Arial, sans-serif\n  ),\n  'geneva': (\n    Geneva, Tahoma, Verdana, sans-serif\n  ),\n  'gill-sans': (\n    'Gill Sans', 'Gill Sans MT', Calibri, sans-serif\n  ),\n  'helvetica': (\n    'Helvetica Neue', Helvetica, Arial, sans-serif\n  ),\n  'lucida-grande': (\n    'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Geneva, Verdana, sans-serif\n  ),\n  'optima': (\n    Optima, Segoe, 'Segoe UI', Candara, Calibri, Arial, sans-serif\n  ),\n  'segoe': (\n    Segoe, 'Segoe UI', 'Helvetica Neue', Arial, sans-serif\n  ),\n  'tahoma': (\n    Tahoma, Geneva, Verdana, sans-serif\n  ),\n  'trebuchet': (\n    'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Tahoma, sans-serif\n  ),\n  'arial': (\n    Arial, sans-serif\n  ),\n  'verdana': (\n    Verdana, Geneva, sans-serif\n  ),\n  'sans-serif': (\n    sans-serif\n  ),\n  'monospace': (\n    'Inconsolata', 'DejaVu Sans Mono', Menlo, Monaco, Consolas, Courier, monospace\n  ),\n);\n","* {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\nbody,\n.sg-body {\n  hyphens: auto;\n  -ms-word-break: break-all;\n  word-break: break-all;\n  word-break: break-word; }\n\n/*\n  FontFaces\n\n  Styleguide 1.7\n*/\n/*\n  Base Styles\n\n  Styleguide 1\n*/\nhtml {\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n  background: transparent;\n  box-sizing: border-box;\n  font-size: 80%; }\n  @media screen and (min-width: 768px) {\n    html {\n      font-size: 85%; } }\n  @media screen and (min-width: 960px) {\n    html {\n      font-size: 90%; } }\n  @media screen and (min-width: 1180px) {\n    html {\n      font-size: 100%; } }\n\n*, *:before, *:after {\n  box-sizing: inherit; }\n\nhtml,\nbody {\n  min-height: 100%; }\n\nbody,\n.sg-body {\n  margin: 0;\n  position: relative;\n  color: #242424;\n  font-size: 1rem;\n  line-height: 1.3125rem;\n  background-color: #f8f8f8; }\n\nabbr, acronym, code, dir, kbd,\nlisting, plaintext, q, samp, tt, var, xmp {\n  hyphens: none; }\n\nh1, h2, h3, h4, h5, h6,\np, blockquote, pre,\ndl, dd, ol, ul {\n  margin-top: 0; }\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {\n  display: block; }\n\naudio, progress, canvas, video {\n  display: inline-block; }\n\nbody, button, input, select, textarea, .sg-body {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; }\n\naudio:not([controls]) {\n  display: none;\n  height: 0; }\n\nselect, option, button, a, input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"] {\n  cursor: pointer; }\n\n[hidden], template {\n  display: none; }\n\n/*\n  Typosizes\n\n  A definition of all fontsizes (classes and tags)\n\n  Styleguide 1.1\n*/\n/*\n  Main Heading Style\n\n  markup:\n  <h1>Lorem Ipsum it dolor</h1>\n  <h3>Lorem Ipsum it dolor</h3>\n\n  Styleguide 1.1.1\n*/\n.h1, h1, .h2, h2, .h3, h3, .h4, h4, .h5, h5, .h6, h6 {\n  text-rendering: optimizeLegibility;\n  margin-bottom: 0rem;\n  color: #636363; }\n\n/*\n  h1\n\n  markup:\n  <h1>Lorem Ipsum it dolor</h1>\n  <p class=\"h1\">Lorem Ipsum it dolor</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.1.2\n*/\n.h1, h1 {\n  font-size: 2.25rem;\n  line-height: 1;\n  margin-bottom: 0.625rem; }\n\n/*\n  h2\n\n  markup:\n  <h2>Lorem Ipsum it dolor</h2>\n  <p class=\"h2\">Lorem Ipsum it dolor</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.1.3\n*/\n.h2, h2 {\n  font-size: 2rem;\n  line-height: 2.48rem;\n  margin-bottom: 0.625rem; }\n\n/*\n  h3\n\n  markup:\n  <h3>Lorem Ipsum it dolor</h3>\n  <p class=\"h3\">Lorem Ipsum it dolor</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.1.4\n*/\n.h3, h3 {\n  font-size: 1.8125rem;\n  line-height: 2.2475rem;\n  margin-bottom: 0.625rem; }\n\n/*\n  h4\n\n  markup:\n  <h4>Lorem Ipsum it dolor</h4>\n  <p class=\"h4\">Lorem Ipsum it dolor</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.1.5\n*/\n.h4, h4 {\n  font-size: 1.5625rem;\n  line-height: 1.9375rem;\n  margin-bottom: 0.625rem; }\n\n/*\n  h5\n\n  markup:\n  <h5>Lorem Ipsum it dolor</h5>\n  <p class=\"h5\">Lorem Ipsum it dolor</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.1.6\n*/\n.h5, h5 {\n  font-size: 1.375rem;\n  line-height: 1.705rem;\n  margin-bottom: 0.625rem; }\n\n/*\n  h6\n\n  markup:\n  <h6>Lorem Ipsum it dolor</h6>\n  <p class=\"h6\">Lorem Ipsum it dolor</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.1.7\n*/\n.h6, h6 {\n  font-size: 1.1875rem;\n  line-height: 1.4725rem;\n  margin-bottom: 0.625rem; }\n\n/*\n  Typostyles and Elements\n\n  Styleguide 1.2\n*/\n/*\n  Header-Stack\n\n  Group Wrapper for Headlines\n\n  markup:\n  <header class=\"header-stack\">\n    <h1>Main Headline</h1>\n    <h2 class=\"h4\">Subheadline</h2>\n  </header>\n\n  Styleguide 1.2.1\n*/\n.header-stack {\n  margin-bottom: 0rem; }\n  .header-stack > * {\n    margin-bottom: 0; }\n  p + .header-stack {\n    margin-top: 1.5625rem; }\n\n/*\n  Paragraph\n\n  Style for Texts\n\n  markup:\n  <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.2\n*/\np {\n  margin-bottom: 1.25rem; }\n  p + h1, p + h2, p + h3, p + h4, p + h5, p + h6 {\n    margin-top: 2.25rem; }\n\n/*\n  Links\n\n  Style for Text Links\n\n  markup:\n  <a href=\"#\">This is a link</a>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.3\n*/\na {\n  outline: 0;\n  line-height: inherit;\n  background: transparent;\n  color: #29b8f2;\n  text-decoration: none; }\n  a:hover, a.link-hover {\n    color: #0c8ec3;\n    text-decoration: none; }\n  a:active, a.is-active {\n    color: #096b93; }\n  a:hover, a:active, a:focus {\n    outline: 0; }\n\n/*\n  Strong\n\n  Bold Style for Texts\n\n  markup:\n  <p><strong>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat.</strong> sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.4\n*/\nstrong {\n  font-weight: bold; }\n\n/*\n  Italic\n\n  Italic Style for Texts\n\n  markup:\n  <p><em>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat.</em> sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.5\n*/\nem, dfn {\n  font-style: italic; }\n\n/*\n  Abbr\n\n  markup:\n  <abbr>Lorem ipsum dolor sit amet, consetetur sadipscing elitr</abbr>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.6\n*/\nabbr {\n  font-variant: small-caps;\n  text-transform: lowercase; }\n  abbr[title] {\n    border-bottom: 1px dotted; }\n    abbr[title]:hover {\n      cursor: help; }\n\n/*\n  Hightlight, Mark\n\n  For Highlightning text passages, also for hightlightning with mouse select\n\n  markup:\n  <p><mark>Lorem ipsum dolor sit amet</mark>, consetetur sadipscing elitr</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.7\n*/\nmark, .hightlight, ::selection {\n  background: #a1e0f9; }\n\n/*\n  Lists\n\n  Styles for Unordered, Ordered and Definition Lists. If a `<ul>` or `<dl>` is wrapped in a `<nav>`, the list got an neutral style.\n\n  markup:\n  <ul>\n    <li>List Entry</li>\n    <li>List Entry</li>\n    <li>List Entry</li>\n  </ul>\n  <ol>\n    <li>List Entry</li>\n    <li>List Entry</li>\n    <li>List Entry</li>\n  </ol>\n  <dd>\n    <dt>List Entry</dt>\n    <dd>List Entry</dd>\n  </dd>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.8\n*/\nul, dl {\n  list-style-type: disc;\n  padding-left: 20px;\n  margin-bottom: 1.25rem; }\n  nav ul, nav dl {\n    list-style-type: none;\n    margin-bottom: 0;\n    padding-left: 0; }\n\nol {\n  padding-left: 22px;\n  margin-bottom: 1.25rem; }\n\nli > ul, li > ol {\n  margin-bottom: 0; }\n\ndt > dl, dd > dl {\n  margin-bottom: 0; }\n\n/*\n  Hairline\n\n  markup:\n  <hr>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.9\n*/\nhr {\n  margin-bottom: 1.25rem;\n  height: 1px;\n  border-left: 0;\n  border-bottom: 0;\n  border-right: 0;\n  border-top: 1px dashed #eeeeee;\n  position: relative;\n  margin-top: 1.25rem; }\n\n/*\n  Code\n\n  For write some code snippets\n\n  markup:\n  <code>\n    <pre>\n      <div>some Code</div>\n    </pre>\n  <code>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.10\n*/\ncode, kbd, pre, samp {\n  font-weight: normal;\n  font-family: \"Inconsolata\", \"DejaVu Sans Mono\", Menlo, Monaco, Consolas, Courier, monospace; }\n\npre {\n  white-space: pre;\n  margin-bottom: 1.25rem; }\n  pre > code {\n    word-wrap: normal;\n    white-space: pre-wrap; }\n\ncode {\n  white-space: pre; }\n\n/*\n  Quotes\n\n  markup:\n  <q>Say something</q>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.11\n*/\nq {\n  quotes: \"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\"; }\n  q:before, q:after {\n    content: '';\n    content: none; }\n\n/*\n  Small Fonts\n\n  Some Styles for Smaller Texts\n\n  markup:\n  <small>Small Text</small><br>\n  <sup>Superposition</sup><br>\n  <sub>Subposition</sub>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.12\n*/\nsmall {\n  font-size: 80%; }\n\nsub, sup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\nsup {\n  top: -0.5em; }\n\nsub {\n  bottom: -0.25em; }\n\ni {\n  font-style: normal;\n  display: inline-block; }\n\n/*\n  Blockquotes\n\n  Simple Style for Blockquotes\n\n  markup:\n  <blockquote>\n    <p>Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</p>\n    <cite>Author from Lorem Ipsum</cite>\n  </blockquote>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.2.13\n*/\nblockquote {\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: 1.25rem; }\n  blockquote p {\n    font-size: 1.125rem;\n    line-height: 1.6875rem; }\n  blockquote cite {\n    font-style: normal;\n    font-size: 0.9375rem;\n    line-height: 1.3125rem; }\n    blockquote cite:before {\n      content: '\\2014 \\0020'; }\n  blockquote *:last-child {\n    margin-bottom: 0; }\n\nblockquote, q, cite {\n  font-style: italic;\n  color: #242424; }\n\n/*\n  Base Media Elements\n\n  Styleguide 1.3\n*/\n/*\n  Image\n\n  Base Style for Images. Images without `height` and `width` are fluid, to there max-width.\n\n  markup:\n  <img src=\"http://lorempixel.com/400/200/cats\"><br>\n  <img src=\"http://lorempixel.com/400/200/cats\" height=\"300\" width=\"200\">\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.3.1\n*/\nimg {\n  border: 0;\n  max-width: 100%;\n  height: auto; }\n  img[width], img[height] {\n    max-width: none; }\n\n/*\n  Figure\n\n  Is a container for Images, all images inside `<figure>` fill the complete space.\n\n  markup:\n  <figure><img src=\"http://lorempixel.com/500/400/cats\"></figure>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.3.2\n*/\nfigure {\n  margin: 0; }\n  figure img {\n    display: block;\n    max-width: none;\n    width: 100%; }\n\n/*\n  Map\n\n  Simple Wrapper to remove `max-width` from embed google Maps\n\n  markup:\n  <div class=\"map_canvas\"><iframe...></div>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.3.3\n*/\n#map_canvas img, #map_canvas embed, #map_canvas object,\n.map_canvas img,\n.map_canvas embed,\n.map_canvas object {\n  max-width: none !important; }\n\nsvg:not(:root) {\n  overflow: hidden; }\n\n/*\n  Video\n\n  Make Video Elements Fluid\n\n  markup:\n  <video></video>\n\n  sg-wrapper:\n  <div class=\"sg-body\" style=\"height: 0; overflow: hidden;\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.3.4\n*/\nvideo {\n  width: 100% !important;\n  height: auto !important; }\n\n/*\n  Base Form Elements\n\n  Styleguide 1.4\n*/\n/*\n  Fieldset\n\n  markup:\n  <fieldset>Lorem Ipsum</fieldset>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.1\n*/\nfieldset {\n  border: 0;\n  padding: 0; }\n\n/*\n  Legend\n\n  markup:\n  <legend>Lorem Ipsum</legend>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.2\n*/\nlegend {\n  border: 0;\n  padding: 0;\n  white-space: normal; }\n\n/*\n  Input\n\n  markup:\n  <input type=\"text\" placeholder=\"Some Values...\">\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.3\n*/\ninput {\n  line-height: normal; }\n  input:focus {\n    outline: 0; }\n\n/*\n  Buttons, Selects, Inputs\n\n  markup:\n  <button>Button</button><br>\n  <input type=\"submit\" value=\"Submit\"><br>\n  <input type=\"reset\" value=\"Reset\"><br>\n  <input type=\"checkbox\" value=\"1\"><br>\n  <input type=\"radio\" value=\"1\"><br>\n  <input type=\"search\" value=\"1\"><br>\n\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.4\n*/\nbutton, optgroup, input, select, textarea {\n  font-size: inherit;\n  margin: 0;\n  color: inherit; }\n\nbutton {\n  line-height: normal;\n  overflow: visible; }\n\nbutton, select {\n  text-transform: none; }\n\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: none; }\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default; }\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  cursor: pointer;\n  padding: 0; }\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto; }\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; }\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0; }\n\nbutton:focus {\n  outline: none; }\n\n/*\n  Textarea\n\n  markup:\n  <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.4.5\n*/\ntextarea {\n  overflow: auto;\n  vertical-align: top;\n  resize: vertical; }\n\n/*\n  Table Elements\n\n  Styleguide 1.5\n*/\n/*\n  Table\n\n  markup:\n  <table>\n    <tr>\n      <th>Table</th>\n      <th>Head</th>\n    <tr>\n    <tr>\n      <td>Table</td>\n      <td>Cell</td>\n    </tr>\n  </table>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.5.1\n*/\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntd,\nth {\n  padding: 0; }\n\n.container {\n  max-width: 960px;\n  margin: 0 auto;\n  overflow: hidden; }\n\n.img__caption {\n  line-height: 2;\n  text-align: center;\n  font-weight: 100; }\n\n.img__link, .img__link:hover {\n  color: initial; }\n\n[data-aspect-ratio] {\n  display: block;\n  max-width: 100%;\n  position: relative;\n  overflow: hidden; }\n  [data-aspect-ratio]:before {\n    content: '';\n    display: block; }\n  [data-aspect-ratio] > * {\n    display: block;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%; }\n  [data-aspect-ratio] > .center--contain {\n    left: 50%;\n    top: 50%;\n    height: auto;\n    width: 100%;\n    transform: translate(-50%, -50%); }\n  [data-aspect-ratio] > .center--cover {\n    left: 50%;\n    top: 50%;\n    height: 100%;\n    width: auto;\n    transform: translate(-50%, -50%); }\n\n[data-aspect-ratio=\"3:1\"]:before {\n  padding-top: 33.33%; }\n\n[data-aspect-ratio=\"2:1\"]:before {\n  padding-top: 50%; }\n\n[data-aspect-ratio=\"16:9\"]:before {\n  padding-top: 56.25%; }\n\n[data-aspect-ratio=\"3:2\"]:before {\n  padding-top: 66.66%; }\n\n[data-aspect-ratio=\"4:3\"]:before {\n  padding-top: 75%; }\n\n[data-aspect-ratio=\"1:1\"]:before {\n  padding-top: 100%; }\n\n[data-aspect-ratio=\"3:4\"]:before {\n  padding-top: 133.33%; }\n\n[data-aspect-ratio=\"2:3\"]:before {\n  padding-top: 150%; }\n\n[data-aspect-ratio=\"9:16\"]:before {\n  padding-top: 177.77%; }\n\n[data-aspect-ratio=\"1:2\"]:before {\n  padding-top: 200%; }\n\n[data-aspect-ratio=\"1:3\"]:before {\n  padding-top: 300%; }\n\n.columns {\n  display: flex; }\n  .columns.is-multiline {\n    flex-wrap: wrap; }\n  .columns.has--padding {\n    margin: -0.75em; }\n    .columns.has--padding > .column {\n      padding: 0.75em; }\n\n.column {\n  flex: 1; }\n  .column.is-3 {\n    width: 33.33333%;\n    flex: none; }\n  .column.is-2 {\n    width: 16.66667%;\n    flex: none; }\n  .column.is-12 {\n    width: 100%;\n    flex: none; }\n","// ===================================================\n// Typography Generator\n// ===================================================\n\n/// Generate the Typo based on the Typo-Map\n///\n/// @group generators\n///\n/// @param  {map}    $map [$kittn-typostyles-map] - Map\n@mixin typogenerator($map: $kittn-typostyles-map) {\n  // Add Counter\n  $counter: 1;\n\n  @each $style, $entry in $map {\n    $selector: null;\n\n    // Move the Counter Up to count the Loop\n    $counter: $counter + 1;\n\n    // Build the Selector\n    @if map-get($entry,tag) != false {\n      $selector: '.#{$style},#{$style}';\n/*\n  #{$style}\n\n  markup:\n  <#{$style}>Lorem Ipsum it dolor</#{$style}>\n  <p class=\"#{$style}\">Lorem Ipsum it dolor</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.1.#{$counter}\n*/\n\n    } @else {\n      $selector: '.#{$style}';\n/*\n  #{$style}\n\n  markup:\n  <p class=\"#{$style}\">Lorem Ipsum it dolor</p>\n\n  sg-wrapper:\n  <div class=\"sg-body\">\n    <sg-wrapper-content/>\n  </div>\n\n  Styleguide 1.1.#{$counter}\n*/\n    }\n    // Add Style\n    #{$selector} {\n      // Extend with a outer class\n      @if map-get($entry,extend) { @extend #{map-get($entry,extend)} }\n\n      // Set the Fontsize\n      @include fontsize(map-get($entry,font-size));\n\n      // Add the Line-Height\n      @if map-get($entry,line-height) {\n        @if map-get($entry,line-height) == d {\n          line-height: 1;\n\n        } @else if map-get($entry,line-height) == c {\n          @include lineheight((map-get($entry,font-size) * 1.24 ));\n\n        } @else {\n          @include lineheight(map-get($entry,line-height));\n        }\n      }\n\n      // Add a Bottom Margin\n      @if map-get($entry,margin-bottom) {\n        @include marginbottom(map-get($entry,margin-bottom));\n      }\n\n      // Include Font-Weight\n      @if map-get($entry,font-weight) {\n        font-weight: map-get($entry,font-weight);\n      }\n    }\n  }\n}\n",".container {\n\tmax-width: 960px;\n\tmargin: 0 auto;\n\toverflow: hidden;\n}",".img{\n\t&__caption {\n\t\tline-height: 2;\n\t\ttext-align: center;\n\t\tfont-weight: 100;\n\t}\n\t&__link, &__link:hover {\n\t\tcolor:initial;\n\t}\n}\n\n","// https://zzzzbov.com/blag/scalable-videos-with-aspect-ratio\n// <div data-aspect-ratio=\"16:9\"><iframe ...></iframe></div>\n[data-aspect-ratio] {\n    display: block;\n    max-width: 100%;\n    position: relative;\n    overflow: hidden;\n\n    &:before {\n        content: '';\n        display: block;\n    }\n\n    > * {\n        display: block;\n        height: 100%;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n    }\n    > .center--contain {\n        left: 50%;\n        top: 50%;\n        height: auto;\n        width: 100%;\n        transform: translate(-50%, -50%)\n    }\n    > .center--cover {\n        left: 50%;\n        top: 50%;\n        height: 100%;\n        width: auto;\n        transform: translate(-50%, -50%)\n    }\n}\n[data-aspect-ratio=\"3:1\"]:before {\n    padding-top: 33.33%;\n}\n[data-aspect-ratio=\"2:1\"]:before {\n    padding-top: 50%;\n}\n[data-aspect-ratio=\"16:9\"]:before {\n    padding-top: 56.25%;\n}\n[data-aspect-ratio=\"3:2\"]:before {\n    padding-top: 66.66%;\n}\n[data-aspect-ratio=\"4:3\"]:before {\n    padding-top: 75%;\n}\n[data-aspect-ratio=\"1:1\"]:before {\n    padding-top: 100%;\n}\n[data-aspect-ratio=\"3:4\"]:before {\n    padding-top: 133.33%;\n}\n[data-aspect-ratio=\"2:3\"]:before {\n    padding-top: 150%;\n}\n[data-aspect-ratio=\"9:16\"]:before {\n    padding-top: 177.77%;\n}\n[data-aspect-ratio=\"1:2\"]:before {\n    padding-top: 200%;\n}\n[data-aspect-ratio=\"1:3\"]:before {\n    padding-top: 300%;\n}",".columns { \n\tdisplay: flex;\n\t&.is-multiline {\n\t\tflex-wrap: wrap;\n\t}\n\t&.has--padding{\n\t\tmargin: -0.75em;\n\t\t// margin-left: -1.5em;\n\t\t// margin-bottom: -1.5em;\n\t\t& > .column {\n\t\t\tpadding: 0.75em;\n\t\t\t// padding-left: 1.5em;\n\t\t\t// padding-bottom: 1.5em;\n\t\t}\n\t}\n}\n.column {\n\tflex: 1;\n\t&.is-3 {\n\t\twidth: 33.33333%;\n\t\tflex: none;\n\t}\n\t&.is-2 {\n\t\twidth: 16.66667%;\n\t\tflex: none;\n\t}\n\t&.is-12 {\n\t\twidth: 100%;\n\t\tflex: none;\n\t}\n\n}\n\n"]}